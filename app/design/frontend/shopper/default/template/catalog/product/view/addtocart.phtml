<?php
/**
 * Magento
 *
 * NOTICE OF LICENSE
 *
 * This source file is subject to the Academic Free License (AFL 3.0)
 * that is bundled with this package in the file LICENSE_AFL.txt.
 * It is also available through the world-wide-web at this URL:
 * http://opensource.org/licenses/afl-3.0.php
 * If you did not receive a copy of the license and are unable to
 * obtain it through the world-wide-web, please send an email
 * to license@magentocommerce.com so we can send you a copy immediately.
 *
 * DISCLAIMER
 *
 * Do not edit or add to this file if you wish to upgrade Magento to newer
 * versions in the future. If you wish to customize Magento for your
 * needs please refer to http://www.magentocommerce.com for more information.
 *
 * @category    design
 * @package     base_default
 * @copyright   Copyright (c) 2011 Magento Inc. (http://www.magentocommerce.com)
 * @license     http://opensource.org/licenses/afl-3.0.php  Academic Free License (AFL 3.0)
 * DCS:
 * <div class="add-to-cart"  <?php if($blCustom) echo "style='visibility:hidden'"; ?> >
 * blCustom:  is ths a Custom Sweaty Band?
 */
 global $blCustom;
 
 
?>

<script type="text/javascript">
    //<![CDATA[
        var productAddToDesign = new VarienForm('product_addtodesign_form');
        var productAddToDesign = new VarienForm('product_addtocart_form', true);
		productAddToDesign.submit = function(button, url) {
			if (this.validator.validate()) {
					if (url) {
					   this.form.action = url;
					 
						this.form.submit();
					}
			}
		}
               
        productAddToDesign.submitLight = function(button, url){
            if(this.validator) {
                var nv = Validation.methods;
                delete Validation.methods['required-entry'];
                delete Validation.methods['validate-one-required'];
                delete Validation.methods['validate-one-required-by-name'];
                if (this.validator.validate()) {
                    if (url) {
                        this.form.action = url;
                    }
                    this.form.submit();
                }
                Object.extend(Validation.methods, nv);
            }
        }.bind(productAddToDesign);
        
               
        productAddToDesign.submitLight = function(button, url){
            if(this.validator) {
                var nv = Validation.methods;
                delete Validation.methods['required-entry'];
                delete Validation.methods['validate-one-required'];
                delete Validation.methods['validate-one-required-by-name'];
                if (this.validator.validate()) {
                    if (url) {
                        this.form.action = url;
                    }
                    this.form.submit();
                }
                Object.extend(Validation.methods, nv);
            }
        }.bind(productAddToDesign);
</script>
<?php $_product = $this->getProduct(); ?>
<?php //$buttonTitle = $this->__('Add to Cart'); 
$buttonTitle = $this->__('Add to Bag'); 

?>




<?php if($_product->isSaleable()): ?>
    <?php if(!$blCustom):  ?>
    <div class="add-to-cart"   >
        <button type="button" title="<?php echo "Add to your Bag" ?>" class="button btn-cart" onclick="productAddToCartForm.submit(this)"><span><span><?php echo $buttonTitle ?></span></span></button>
        <?php echo $this->getChildHtml('', true, true) ?>
    </div>
    <?php endif; ?>
	
	<?php if (($_product->getIsCustomizable()) && ($_product->isConfigurable())): ?> 
	         <!-- <br/> --> <!-- [JMO] -->
				<button class="button btn-cart" onclick="productAddToDesign.submit(this,'<?php echo $this->helper('design')->getDesignPageUrl($_product) ?>');" type="button" title="<?php echo $this->__('Personalize Your Choice!') ?>" ><span><span><?php echo $this->__('Personalize') ?></span></span></button><br />			
    <?php endif; ?>
<?php endif; ?>
